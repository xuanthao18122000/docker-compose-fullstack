{
  "version": 3,
  "sources": ["../../.pnpm/antd@5.4.6_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/card/style/index.js"],
  "sourcesContent": ["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { clearFix, resetComponent, textEllipsis } from '../../style';\n// ============================== Styles ==============================\n// ============================== Head ==============================\nconst genCardHeadStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    cardHeadHeight,\n    cardPaddingBase,\n    cardHeadTabsMarginBottom\n  } = token;\n  return Object.assign(Object.assign({\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    minHeight: cardHeadHeight,\n    marginBottom: -1,\n    padding: `0 ${cardPaddingBase}px`,\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.fontSizeLG,\n    background: 'transparent',\n    borderBottom: `${token.lineWidth}px ${token.lineType} ${token.colorBorderSecondary}`,\n    borderRadius: `${token.borderRadiusLG}px ${token.borderRadiusLG}px 0 0`\n  }, clearFix()), {\n    '&-wrapper': {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    '&-title': Object.assign(Object.assign({\n      display: 'inline-block',\n      flex: 1\n    }, textEllipsis), {\n      [`\n          > ${componentCls}-typography,\n          > ${componentCls}-typography-edit-content\n        `]: {\n        insetInlineStart: 0,\n        marginTop: 0,\n        marginBottom: 0\n      }\n    }),\n    [`${antCls}-tabs-top`]: {\n      clear: 'both',\n      marginBottom: cardHeadTabsMarginBottom,\n      color: token.colorText,\n      fontWeight: 'normal',\n      fontSize: token.fontSize,\n      '&-bar': {\n        borderBottom: `${token.lineWidth}px ${token.lineType} ${token.colorBorderSecondary}`\n      }\n    }\n  });\n};\n// ============================== Grid ==============================\nconst genCardGridStyle = token => {\n  const {\n    cardPaddingBase,\n    colorBorderSecondary,\n    cardShadow,\n    lineWidth\n  } = token;\n  return {\n    width: '33.33%',\n    padding: cardPaddingBase,\n    border: 0,\n    borderRadius: 0,\n    boxShadow: `\n      ${lineWidth}px 0 0 0 ${colorBorderSecondary},\n      0 ${lineWidth}px 0 0 ${colorBorderSecondary},\n      ${lineWidth}px ${lineWidth}px 0 0 ${colorBorderSecondary},\n      ${lineWidth}px 0 0 0 ${colorBorderSecondary} inset,\n      0 ${lineWidth}px 0 0 ${colorBorderSecondary} inset;\n    `,\n    transition: `all ${token.motionDurationMid}`,\n    '&-hoverable:hover': {\n      position: 'relative',\n      zIndex: 1,\n      boxShadow: cardShadow\n    }\n  };\n};\n// ============================== Actions ==============================\nconst genCardActionsStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    cardActionsLiMargin,\n    cardActionsIconSize,\n    colorBorderSecondary\n  } = token;\n  return Object.assign(Object.assign({\n    margin: 0,\n    padding: 0,\n    listStyle: 'none',\n    background: token.colorBgContainer,\n    borderTop: `${token.lineWidth}px ${token.lineType} ${colorBorderSecondary}`,\n    display: 'flex',\n    borderRadius: `0 0 ${token.borderRadiusLG}px ${token.borderRadiusLG}px `\n  }, clearFix()), {\n    '& > li': {\n      margin: cardActionsLiMargin,\n      color: token.colorTextDescription,\n      textAlign: 'center',\n      '> span': {\n        position: 'relative',\n        display: 'block',\n        minWidth: token.cardActionsIconSize * 2,\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        cursor: 'pointer',\n        '&:hover': {\n          color: token.colorPrimary,\n          transition: `color ${token.motionDurationMid}`\n        },\n        [`a:not(${componentCls}-btn), > ${iconCls}`]: {\n          display: 'inline-block',\n          width: '100%',\n          color: token.colorTextDescription,\n          lineHeight: `${token.fontSize * token.lineHeight}px`,\n          transition: `color ${token.motionDurationMid}`,\n          '&:hover': {\n            color: token.colorPrimary\n          }\n        },\n        [`> ${iconCls}`]: {\n          fontSize: cardActionsIconSize,\n          lineHeight: `${cardActionsIconSize * token.lineHeight}px`\n        }\n      },\n      '&:not(:last-child)': {\n        borderInlineEnd: `${token.lineWidth}px ${token.lineType} ${colorBorderSecondary}`\n      }\n    }\n  });\n};\n// ============================== Meta ==============================\nconst genCardMetaStyle = token => Object.assign(Object.assign({\n  margin: `-${token.marginXXS}px 0`,\n  display: 'flex'\n}, clearFix()), {\n  '&-avatar': {\n    paddingInlineEnd: token.padding\n  },\n  '&-detail': {\n    overflow: 'hidden',\n    flex: 1,\n    '> div:not(:last-child)': {\n      marginBottom: token.marginXS\n    }\n  },\n  '&-title': Object.assign({\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.fontSizeLG\n  }, textEllipsis),\n  '&-description': {\n    color: token.colorTextDescription\n  }\n});\n// ============================== Inner ==============================\nconst genCardTypeInnerStyle = token => {\n  const {\n    componentCls,\n    cardPaddingBase,\n    colorFillAlter\n  } = token;\n  return {\n    [`${componentCls}-head`]: {\n      padding: `0 ${cardPaddingBase}px`,\n      background: colorFillAlter,\n      '&-title': {\n        fontSize: token.fontSize\n      }\n    },\n    [`${componentCls}-body`]: {\n      padding: `${token.padding}px ${cardPaddingBase}px`\n    }\n  };\n};\n// ============================== Loading ==============================\nconst genCardLoadingStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    overflow: 'hidden',\n    [`${componentCls}-body`]: {\n      userSelect: 'none'\n    }\n  };\n};\n// ============================== Basic ==============================\nconst genCardStyle = token => {\n  const {\n    componentCls,\n    cardShadow,\n    cardHeadPadding,\n    colorBorderSecondary,\n    boxShadowTertiary,\n    cardPaddingBase\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadiusLG,\n      [`&:not(${componentCls}-bordered)`]: {\n        boxShadow: boxShadowTertiary\n      },\n      [`${componentCls}-head`]: genCardHeadStyle(token),\n      [`${componentCls}-extra`]: {\n        // https://stackoverflow.com/a/22429853/3040605\n        marginInlineStart: 'auto',\n        color: '',\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`${componentCls}-body`]: Object.assign({\n        padding: cardPaddingBase,\n        borderRadius: ` 0 0 ${token.borderRadiusLG}px ${token.borderRadiusLG}px`\n      }, clearFix()),\n      [`${componentCls}-grid`]: genCardGridStyle(token),\n      [`${componentCls}-cover`]: {\n        '> *': {\n          display: 'block',\n          width: '100%'\n        },\n        img: {\n          borderRadius: `${token.borderRadiusLG}px ${token.borderRadiusLG}px 0 0`\n        }\n      },\n      [`${componentCls}-actions`]: genCardActionsStyle(token),\n      [`${componentCls}-meta`]: genCardMetaStyle(token)\n    }),\n    [`${componentCls}-bordered`]: {\n      border: `${token.lineWidth}px ${token.lineType} ${colorBorderSecondary}`,\n      [`${componentCls}-cover`]: {\n        marginTop: -1,\n        marginInlineStart: -1,\n        marginInlineEnd: -1\n      }\n    },\n    [`${componentCls}-hoverable`]: {\n      cursor: 'pointer',\n      transition: `box-shadow ${token.motionDurationMid}, border-color ${token.motionDurationMid}`,\n      '&:hover': {\n        borderColor: 'transparent',\n        boxShadow: cardShadow\n      }\n    },\n    [`${componentCls}-contain-grid`]: {\n      [`${componentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      [`&:not(${componentCls}-loading) ${componentCls}-body`]: {\n        marginBlockStart: -token.lineWidth,\n        marginInlineStart: -token.lineWidth,\n        padding: 0\n      }\n    },\n    [`${componentCls}-contain-tabs`]: {\n      [`> ${componentCls}-head`]: {\n        [`${componentCls}-head-title, ${componentCls}-extra`]: {\n          paddingTop: cardHeadPadding\n        }\n      }\n    },\n    [`${componentCls}-type-inner`]: genCardTypeInnerStyle(token),\n    [`${componentCls}-loading`]: genCardLoadingStyle(token),\n    [`${componentCls}-rtl`]: {\n      direction: 'rtl'\n    }\n  };\n};\n// ============================== Size ==============================\nconst genCardSizeStyle = token => {\n  const {\n    componentCls,\n    cardPaddingSM,\n    cardHeadHeightSM\n  } = token;\n  return {\n    [`${componentCls}-small`]: {\n      [`> ${componentCls}-head`]: {\n        minHeight: cardHeadHeightSM,\n        padding: `0 ${cardPaddingSM}px`,\n        fontSize: token.fontSize,\n        [`> ${componentCls}-head-wrapper`]: {\n          [`> ${componentCls}-extra`]: {\n            fontSize: token.fontSize\n          }\n        }\n      },\n      [`> ${componentCls}-body`]: {\n        padding: cardPaddingSM\n      }\n    },\n    [`${componentCls}-small${componentCls}-contain-tabs`]: {\n      [`> ${componentCls}-head`]: {\n        [`${componentCls}-head-title, ${componentCls}-extra`]: {\n          minHeight: cardHeadHeightSM,\n          paddingTop: 0,\n          display: 'flex',\n          alignItems: 'center'\n        }\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Card', token => {\n  const cardToken = mergeToken(token, {\n    cardShadow: token.boxShadowCard,\n    cardHeadHeight: token.fontSizeLG * token.lineHeightLG + token.padding * 2,\n    cardHeadHeightSM: token.fontSize * token.lineHeight + token.paddingXS * 2,\n    cardHeadPadding: token.padding,\n    cardPaddingBase: token.paddingLG,\n    cardHeadTabsMarginBottom: -token.padding - token.lineWidth,\n    cardActionsLiMargin: `${token.paddingSM}px 0`,\n    cardActionsIconSize: token.fontSize,\n    cardPaddingSM: 12 // Fixed padding.\n  });\n\n  return [\n  // Style\n  genCardStyle(cardToken),\n  // Size\n  genCardSizeStyle(cardToken)];\n});"],
  "mappings": "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",
  "names": []
}
