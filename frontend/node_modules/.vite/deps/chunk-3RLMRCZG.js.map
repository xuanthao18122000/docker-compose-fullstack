{
  "version": 3,
  "sources": ["../../.pnpm/antd@5.4.6_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/avatar/style/index.js"],
  "sourcesContent": ["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    avatarSizeBase,\n    avatarSizeLG,\n    avatarSizeSM,\n    avatarFontSizeBase,\n    avatarFontSizeLG,\n    avatarFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: `${size - lineWidth * 2}px`,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`${componentCls}-string`]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${lineWidth}px ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(avatarSizeBase, avatarFontSizeBase, borderRadius)), {\n      [`&-lg`]: Object.assign({}, avatarSizeStyle(avatarSizeLG, avatarFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: Object.assign({}, avatarSizeStyle(avatarSizeSM, avatarFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    avatarGroupBorderColor,\n    avatarGroupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: avatarGroupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: avatarGroupSpace\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    colorBorderBg,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid,\n    avatarSizeBase: controlHeight,\n    avatarSizeLG: controlHeightLG,\n    avatarSizeSM: controlHeightSM,\n    avatarFontSizeBase: Math.round((fontSizeLG + fontSizeXL) / 2),\n    avatarFontSizeLG: fontSizeHeading3,\n    avatarFontSizeSM: fontSize,\n    avatarGroupSpace: -marginXS,\n    avatarGroupBorderColor: colorBorderBg\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n});"],
  "mappings": "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",
  "names": []
}
