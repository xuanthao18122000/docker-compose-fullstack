{
  "version": 3,
  "sources": ["../../.pnpm/antd@5.4.6_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/_util/capitalize.js", "../../.pnpm/antd@5.4.6_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/tag/style/index.js"],
  "sourcesContent": ["export default function capitalize(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  const ret = str.charAt(0).toUpperCase() + str.slice(1);\n  return ret;\n}", "import capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`]\n    }\n  };\n};\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      },\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: `${token.tagLineHeight}px`,\n      whiteSpace: 'nowrap',\n      background: token.tagDefaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.tagDefaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagHeight = Math.round(fontSize * lineHeight);\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = tagHeight - lineWidth * 2;\n  const tagDefaultBg = token.colorFillQuaternary;\n  const tagDefaultColor = token.colorText;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagDefaultBg,\n    tagDefaultColor,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return [genBaseStyle(tagToken), genPresetStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n});"],
  "mappings": "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",
  "names": []
}
